{"ast":null,"code":"// pages/api/readFile.js\nimport fs from 'fs';\nimport path from 'path';\nconst FILES_DIR = './pages';\nexport default async function handler(req, res) {\n  if (req.method === 'GET') {\n    try {\n      const {\n        filename\n      } = req.query;\n      const filePath = path.join(FILES_DIR, filename);\n      const data = fs.readFileSync(filePath, 'utf8');\n      res.status(200).json({\n        content: data\n      });\n    } catch (error) {\n      res.status(500).json({\n        error: 'Error reading file',\n        details: error.message\n      });\n    }\n  } else {\n    res.setHeader('Allow', ['GET']);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n  }\n}","map":{"version":3,"sources":["/home/runner/next-agi/pages/api/readFile.js"],"names":["fs","path","FILES_DIR","handler","req","res","method","filename","query","filePath","join","data","readFileSync","status","json","content","error","details","message","setHeader","end"],"mappings":"AAAA;AACA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,SAAS,GAAG,SAAlB;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9C,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAeH,GAAG,CAACI,KAAzB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAL,CAAUR,SAAV,EAAqBK,QAArB,CAAjB;AACA,YAAMI,IAAI,GAAGX,EAAE,CAACY,YAAH,CAAgBH,QAAhB,EAA0B,MAA1B,CAAb;AACAJ,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAEJ;AAAX,OAArB;AACD,KALD,CAKE,OAAOK,KAAP,EAAc;AACdX,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,QAAAA,KAAK,EAAE,oBAAT;AAA+BC,QAAAA,OAAO,EAAED,KAAK,CAACE;AAA9C,OAArB;AACD;AACF,GATD,MASO;AACLb,IAAAA,GAAG,CAACc,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACAd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBO,GAAhB,CAAqB,UAAShB,GAAG,CAACE,MAAO,cAAzC;AACD;AACF","sourcesContent":["// pages/api/readFile.js\nimport fs from 'fs';\nimport path from 'path';\n\nconst FILES_DIR = './pages';\n\nexport default async function handler(req, res) {\n  if (req.method === 'GET') {\n    try {\n      const { filename } = req.query;\n      const filePath = path.join(FILES_DIR, filename);\n      const data = fs.readFileSync(filePath, 'utf8');\n      res.status(200).json({ content: data });\n    } catch (error) {\n      res.status(500).json({ error: 'Error reading file', details: error.message });\n    }\n  } else {\n    res.setHeader('Allow', ['GET']);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}