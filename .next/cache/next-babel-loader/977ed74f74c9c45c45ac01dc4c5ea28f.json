{"ast":null,"code":"// pages/api/updateFile.js\nimport fs from 'fs';\nimport path from 'path';\nconst FILES_DIR = './';\nexport default async function handler(req, res) {\n  if (req.method === 'PUT') {\n    try {\n      const {\n        filename,\n        content\n      } = req.body;\n      const filePath = path.join(FILES_DIR, filename);\n      fs.writeFileSync(filePath, content, 'utf8');\n      res.status(200).json({\n        message: 'File updated successfully'\n      });\n    } catch (error) {\n      res.status(500).json({\n        error: 'Error updating file'\n      });\n    }\n  } else {\n    res.setHeader('Allow', ['PUT']);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n  }\n}","map":{"version":3,"sources":["/home/runner/next-agi/pages/api/updateFile.js"],"names":["fs","path","FILES_DIR","handler","req","res","method","filename","content","body","filePath","join","writeFileSync","status","json","message","error","setHeader","end"],"mappings":"AAAA;AACA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,SAAS,GAAG,IAAlB;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9C,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,QAAI;AACF,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAwBJ,GAAG,CAACK,IAAlC;AACA,YAAMC,QAAQ,GAAGT,IAAI,CAACU,IAAL,CAAUT,SAAV,EAAqBK,QAArB,CAAjB;AACAP,MAAAA,EAAE,CAACY,aAAH,CAAiBF,QAAjB,EAA2BF,OAA3B,EAAoC,MAApC;AACAH,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdX,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAArB;AACD;AACF,GATD,MASO;AACLX,IAAAA,GAAG,CAACY,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACAZ,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBK,GAAhB,CAAqB,UAASd,GAAG,CAACE,MAAO,cAAzC;AACD;AACF","sourcesContent":["// pages/api/updateFile.js\nimport fs from 'fs';\nimport path from 'path';\n\nconst FILES_DIR = './';\n\nexport default async function handler(req, res) {\n  if (req.method === 'PUT') {\n    try {\n      const { filename, content } = req.body;\n      const filePath = path.join(FILES_DIR, filename);\n      fs.writeFileSync(filePath, content, 'utf8');\n      res.status(200).json({ message: 'File updated successfully' });\n    } catch (error) {\n      res.status(500).json({ error: 'Error updating file' });\n    }\n  } else {\n    res.setHeader('Allow', ['PUT']);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}